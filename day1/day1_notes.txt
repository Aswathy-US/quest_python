1. UNDERSTAND THE PROBLEM. Write the down the required data and information. Isolate and remove the unwanted data and information.
Also assertain/decide/infer the O/P of the problem.
OUTCOME: The hidden Direct Question in the given problem statement we get. (The given problem may be story kind or real life scenario)



2. FIND THE SOLUTION using mathematically or trial and error or using any specific formula or known technique.
OUTCOME: You have a clear idea of the solution for the given problem (which we may be implementable)



3. WRITE THE ALOGRITHM: An algorithm is a step by step procedure to solve an ATOMIC problem.
Each step of the algorithm, must be atomic, descriptive and finite.
OUTCOME: You have all the instructions/steps/statements of the solution.



4. PSEUDOCODE: Write the FakeCode:
Advantage of writing the pseudocode is that, it looks like a code written in some language.
OUTCOME: You have a solution which you can test (Test it using flow chart or some testing tool or de-bugger, Testing means, Tracing the logic)



5. CODE THE SOLUTION: using the language syntax (Python or Java or C++ or C or C# or R)
OUTCOME: The basic App/Program is ready



6. STATISFY THE CONSTRAINTS: Read the constraints and go back to the code and add the required conditions that check the data to be in required range.



7. OPTIMIZE THE SOLUTION: The code efficiency, readabality and maintainability must be good. Hence, Allign the code to follow the development standards.

 

[1:06 PM] Nithin Neelakanta Rao (Guest)

1. Check if a character is a digit.



Every character in every language belongs to a specific character set.
The older but widely used character set is ASCII which has 256 characters and every character is of one byte in size.
256 characters were insufficient. Hence UNICODE character set was introduced which is used by languages like Java, Python, Modern C++, C# etc. However, the 1st 256 Unicode characters are the ASCII characters. All the characters have respective(unique) values.
The unicode/ascii values of the digits which are stored as characters in memory have their values starting from 48 to 57. That is the character '0' has value 48, '1' has 49 and '2' has 50 and so on upto '9' with value 57.


 

[1:06 PM] Nithin Neelakanta Rao (Guest)

CH = '2' here 2 is stored in CH as a character
NUM = 2  here 2 is stored in NUM as a number



Algorithm:
1. Read a character say CH
2. check if CH >= 48 and CH <= 57
Alternatively, we can also check: CH >= '0' and CH <= '9'
if yes: Print 'given character is a digit'
else:   Print 'given character is not a digit'



NOTE:
We cannot use strings as integers in Python. If we try to do so, we get "TypeError" which is runtime error.



ValueError: If we try to convert a data into another type which is not possible. Example, trying to convert 'abc' into int()



Python Solution:
print('Enter a character to chekc if it is a digit')
ch = input()
if ch >= '0' and ch <= '9':
    print('given character is a digit')
else:
    print('given character is Not a digit')

 

[2:25 PM] J sreejith

import math

a=int(input("enter the num"))

s=int(math.sqrt(a))

b=s*s

if b==a:

    print("prefect square")

else:

    print("not prefect square")

 


45    6.76  6    36
121    11.0  11    121
Algorithm:
Read the input number N
Find Root of N and store it a variable ROOT
Now find the Floor of ROOT and store it in INT_ROOT
Now check if INT_ROOT * INT_ROOT is equal to N
If yes: print N is P S
else  : print N is not a P S



floor() It removes/truncates the decimal part if any.



round() If the decimal part is 0.5 or more then next integer number is returned, else the decimal part is truncated.



ciel() Returns the next integer number if the decimal part of the number is anything other than .0
So ciel(7.000001) is 8.

 



what is data

 

[2:52 PM] Shafin Shajahan (Guest)

digital and analog?

 

[3:09 PM] Nithin Neelakanta Rao (Guest)

What is Data ?
Data is some information which has an implicit meaning and it is worth storing.



Give a name to the below set:
{sky, needle, fever, transistor, webcam, biology, grass, point, her, mammle}



Give a name to the below set:
{Tiruvanantapuram, Chennai, Bengaluru, Amaravati, Panjim}



places/locations
cities
data
capital cities
capital cities of southern states of India



Types of data?
How we can classify the data ?



w.r.t. Data Types:
numeric
boolean
string
multimedia data (images, video, audio, gif etc)



w.r.t. nature of the data:
qlalitative and quantitative data



Numeric:
  number (int, long, short, byte, tinyint, smallint, bigint)
  number with precision (float and double)
string
  alphabetic (name of a place or person)
  alphanumeric (number of a vehicle, USN of a student etc)

 

[3:09 PM] Nithin Neelakanta Rao (Guest)

In Pallakkad NSS college:
The college every year filicitates a topper and only one and always.



Assume, 4 students got the top score 97. Now the college is in confusion what to do! Because there is no single topper.
So they sent to re-correction and gave these instructions to the evaluator:
1. If you find any grammer mistake (missing punctuations) or scratches done or not a good explanation, etc then you can remove 0.5 marks.
2. If you find the answer is very good and good readabality etc, then give extra 0.5 marks.
3. Any addition or deduction of marks can be done only 2 times.



Thus after re-correction,
s1 got bonus 0.5 and now the score is 97.5
s2 got 2 times deduction and hence 1 mark reduced and score is 96
s3 got 1 time deduction and new score is 96.5
s4 remained with 97 because there was no changes.



So, now the college NSS can declare the topper.
What helped the college to do so?
It is the decimal part of the number. And hence the decimal part of a number is not part of the, rather it is mentions the accuracy/precision of the number.

 













ARITHMETIC OPERATORS:
+  -  *  /  % 
Additions in Python:  // **



All the arithmetic operators are binary operators.
The operator is always placed in between the operands, i.e. we must use the INFIX NOTATION syntax only.
oprnd1 oprnd2 * (postfix notation)
+ oprnd1 prnd2  (prefix notation)
oprnd1 - oprnd2 (Infix notation)
The + and - operators have LESSER PRECEDENCE than * / and %
This rule is called as BRODMAS RULE.
Associtivity: The Arithmetic expression is always solved Left to Right.
Arithmetic operators have Left to Right associtivity.
x + y % z
The modulo operation must happen 1st. Then the remainder number is added to x.
However, the expression is read from left, that is we read 'x' first.
Hence, all Arithmetic expressions are solved only after converting the Programmer/user written Infix expression into postfix and then the expression io solved.



The i/p are numbers 
The o/p is number





























NOTE: The way integers are stored and the way floating point numbers are stored are different.



+ve integers are stored only by impleting the algorithm to convert decimal/octal/hexa-decimal numbers into binary.



-ve numbers: The 2s compliment of the number is stored in memory.



float/double: IEEE standard formula is used to store the number.



And hence, when an Arithmetic operation happens, the Data Type of both the operands must be same. If not, one of the 2 operands is implicitly type casted.



TYPE CASTING:
Conversion of the DT of a value (usually a number) to another.
Explicit Casting: When the programmer adds the code(syntax) for the cast to happen:
var = '10.5'
num = float(var) 
Above is an example of Casting. Where we are converting a string into an integer number.
var = 10.5
num = int(var)
Here we are explicitly casting float data into int data.
Note that the decimal part (precision) is lost. Hence it is called as DOWN CAST.
When ever we cast a lower sized data type value into a higher sized data type value, then it is called as UP CAST.



var = 10.5
num = var // This is implicit down cast



w.r.t. C/C++/Java
int num1 = 25;
double d = num; // This is implicit up cast
int num2 = int(d); // This explicit down cast
